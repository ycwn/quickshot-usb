

#ifndef JOYSTICK_H
#define JOYSTICK_H


#include "joystick-qs206.h"
#include "joystick-svi102.h"


#ifndef JOYSTICK_VENDOR
#error "No joystick configuration selected"
#endif


#define JOYSTICK_IS_ANALOG_ANALOG(...)    1
#define JOYSTICK_IS_ANALOG_DIGITAL(...)   0
#define JOYSTICK_IS_ANALOG_DISABLED       0
#define JOYSTICK_IS_ANALOG(axis)          PP_CONCAT(JOYSTICK_IS_ANALOG_, axis)        // Eval to 1 if axis is analog, 0 otherwise
#define JOYSTICK_COUNT_ANALOG(axes)           (0 PP_FOREACH(+ JOYSTICK_IS_ANALOG, axes))  // Count the number of axes that are analog

#define JOYSTICK_IS_DIGITAL_ANALOG(...)    0
#define JOYSTICK_IS_DIGITAL_DIGITAL(...)   1
#define JOYSTICK_IS_DIGITAL_DISABLED       0
#define JOYSTICK_IS_DIGITAL(axis)          PP_CONCAT(JOYSTICK_IS_DIGITAL_, axis)        // Eval to 1 if axis is digital, 0 otherwise
#define JOYSTICK_COUNT_DIGITAL(axes)       (0 PP_FOREACH(+ JOYSTICK_IS_DIGITAL, axes))  // Count the number of axes that are digital

#define JOYSTICK_IS_ENABLED_ANALOG(...)    1
#define JOYSTICK_IS_ENABLED_DIGITAL(...)   1
#define JOYSTICK_IS_ENABLED_DISABLED       0
#define JOYSTICK_IS_ENABLED(axis)          PP_CONCAT(JOYSTICK_IS_ENABLED_, axis)        // Eval to 1 if axis is emabled, 0 otherwise
#define JOYSTICK_COUNT_ENABLED(axes)       (0 PP_FOREACH(+ JOYSTICK_IS_ENABLED, axes))  // Count the number of axes that are enabled

#define JOYSTICK_IF_FALSE(args...)
#define JOYSTICK_IF_TRUE(args...)     args

#define JOYSTICK_IF_ENABLED_ANALOG(...)       JOYSTICK_IF_TRUE
#define JOYSTICK_IF_ENABLED_DIGITAL(...)      JOYSTICK_IF_TRUE
#define JOYSTICK_IF_ENABLED_DISABLED          JOYSTICK_IF_FALSE
#define JOYSTICK_IF_ENABLED(axis, args...)    PP_CONCAT(JOYSTICK_IF_ENABLED_, axis)(args)  // Eval to args if axis is enabled, nothing otherwise

#define JOYSTICK_IF_DISABLED_ANALOG(...)       JOYSTICK_IF_FALSE
#define JOYSTICK_IF_DISABLED_DIGITAL(...)      JOYSTICK_IF_FALSE
#define JOYSTICK_IF_DISABLED_DISABLED          JOYSTICK_IF_TRUE
#define JOYSTICK_IF_DISABLED(axis, args...)    PP_CONCAT(JOYSTICK_IF_DISABLED_, axis)(args)  // Eval to args if axis is disabled, nothing otherwise

#define JOYSTICK_GET_PIN0_ANALOG(p0)        (p0)
#define JOYSTICK_GET_PIN0_DIGITAL(p0, p1)   (p0)
#define JOYSTICK_GET_PIN0_DISABLED          (-1)
#define JOYSTICK_GET_PIN0(axis)             PP_CONCAT(JOYSTICK_GET_PIN0_, axis)

#define JOYSTICK_GET_PIN1_ANALOG(p0)        (-1)
#define JOYSTICK_GET_PIN1_DIGITAL(p0, p1)   (p1)
#define JOYSTICK_GET_PIN1_DISABLED          (-1)
#define JOYSTICK_GET_PIN1(axis)             PP_CONCAT(JOYSTICK_GET_PIN1_, axis)

#define JOYSTICK_GET_BUTTON(n)  \
	PP_EVAL(PP_POP,         \
		PP_REDUCE(      \
		PP_SHIFT, n, JOYSTICK_BUTTONS, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 \
	))


#define JOYSTICK_AXIS_LIST \
	JOYSTICK_AXIS_X,  JOYSTICK_AXIS_Y,  JOYSTICK_AXIS_Z,  \
	JOYSTICK_AXIS_RX, JOYSTICK_AXIS_RY, JOYSTICK_AXIS_RZ, \
	JOYSTICK_AXIS_VX, JOYSTICK_AXIS_VY, JOYSTICK_AXIS_VZ


#define JOYSTICK_NUM_BUTTONS     PP_EVAL(PP_NARG, JOYSTICK_BUTTONS)
#define JOYSTICK_NUM_AAXES       JOYSTICK_COUNT_ANALOG(JOYSTICK_AXIS_LIST)
#define JOYSTICK_NUM_DAXES       JOYSTICK_COUNT_DIGITAL(JOYSTICK_AXIS_LIST)
#define JOYSTICK_NUM_AXES        (JOYSTICK_NUM_AAXES + JOYSTICK_NUM_DAXES)
#define JOYSTICK_HAS_THROTTLE    JOYSTICK_IS_ENABLED(JOYSTICK_THROTTLE)
#define JOYSTICK_HAS_RUDDER      JOYSTICK_IS_ENABLED(JOYSTICK_RUDDER)
#define JOYSTICK_HAS_POVHAT      JOYSTICK_IS_ENABLED(JOYSTICK_POVHAT)


#if JOYSTICK_NUM_BUTTONS > 16
#error "Too many buttons defined"
#endif

#if JOYSTICK_NUM_AXES > 9
#error "Too many axes defined"
#endif


enum {

	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_X,  JOYSTICK_STATE_AXIS_X = -1,)
	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_Y,  JOYSTICK_STATE_AXIS_Y = -1,)
	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_Z,  JOYSTICK_STATE_AXIS_Z = -1,)

	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_RX, JOYSTICK_STATE_AXIS_RX = -1,)
	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_RY, JOYSTICK_STATE_AXIS_RY = -1,)
	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_RZ, JOYSTICK_STATE_AXIS_RZ = -1,)

	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_VX, JOYSTICK_STATE_AXIS_VX = -1,)
	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_VY, JOYSTICK_STATE_AXIS_VY = -1,)
	JOYSTICK_IF_DISABLED(JOYSTICK_AXIS_VZ, JOYSTICK_STATE_AXIS_VZ = -1,)

	JOYSTICK_IF_DISABLED(JOYSTICK_THROTTLE, JOYSTICK_STATE_THROTTLE = -1,)
	JOYSTICK_IF_DISABLED(JOYSTICK_RUDDER,   JOYSTICK_STATE_RUDDER   = -1,)
	JOYSTICK_IF_DISABLED(JOYSTICK_POVHAT,   JOYSTICK_STATE_POVHAT   = -1,)

	JOYSTICK_STATE_BUTTONS = 0,

	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_X,  JOYSTICK_STATE_AXIS_X,)
	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_Y,  JOYSTICK_STATE_AXIS_Y,)
	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_Z,  JOYSTICK_STATE_AXIS_Z,)

	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_RX, JOYSTICK_STATE_AXIS_RX,)
	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_RY, JOYSTICK_STATE_AXIS_RY,)
	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_RZ, JOYSTICK_STATE_AXIS_RZ,)

	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_VX, JOYSTICK_STATE_AXIS_VX,)
	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_VY, JOYSTICK_STATE_AXIS_VY,)
	JOYSTICK_IF_ENABLED(JOYSTICK_AXIS_VZ, JOYSTICK_STATE_AXIS_VZ,)

	JOYSTICK_IF_ENABLED(JOYSTICK_THROTTLE, JOYSTICK_STATE_THROTTLE,)
	JOYSTICK_IF_ENABLED(JOYSTICK_RUDDER,   JOYSTICK_STATE_RUDDER,)
	JOYSTICK_IF_ENABLED(JOYSTICK_POVHAT,   JOYSTICK_STATE_POVHAT,)

	JOYSTICK_STATE_MAX

};


extern u16 joystick_state[JOYSTICK_STATE_MAX];


void joystick_init();
void joystick_update();


#endif

